var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.317,1,0.987]],["body/components/AppComponent.html",[0,1.538,1,1.294,2,2.586,3,0.86,4,0.459,5,1.682,6,1.682,7,1.682,8,1.682,9,0.277,10,1.344,11,1.344,12,2.516,13,2.164,14,1.787,15,2.066,16,3.15,17,2.066,18,2.586,19,0.459,20,1.263,21,1.153,22,3.15,23,1.787,24,3.15,25,3.459,26,0.947,27,2.586,28,2.006,29,3.535,30,2.586,31,2.38,32,2.38,33,2.38,34,0.821,35,1.682,36,1.12,37,1.977,38,2.586,39,1.263,40,0.057,41,1.726,42,1.294,43,0.947,44,2.066,45,2.586,46,1.682,47,2.164,48,1.772,49,1.538,50,3.15,51,0.86,52,1.967,53,1.682,54,1.682,55,2.684,56,1.682,57,1.494,58,0.965,59,1.119,60,1.263,61,1.467,62,1.263,63,1.467,64,1.682,65,1.682,66,2.586,67,1.682,68,1.682,69,1.682,70,1.682,71,1.682,72,1.682,73,1.682,74,0.706,75,0.459,76,1.538,77,1.863,78,0.393,79,0.226,80,1.682,81,1.682,82,2.099,83,1.682,84,1.682,85,1.682,86,2.586,87,1.344,88,1.344,89,1.787,90,1.331,91,1.344,92,1.344,93,1.344,94,1.682,95,1.682,96,2.824,97,2.066,98,2.066,99,2.066,100,2.066,101,1.723,102,2.066,103,2.066,104,1.294,105,2.066,106,1.723,107,2.066,108,2.066,109,3.547,110,2.519,111,2.099,112,2.066,113,2.066,114,2.586,115,1.467,116,2.066,117,2.586,118,2.066,119,2.824,120,2.586,121,2.066,122,2.586,123,1.467,124,1.092,125,1.092,126,1.092,127,2.586,128,2.586,129,2.586,130,1.682,131,2.586,132,1.682,133,3.15,134,1.682,135,1.682,136,1.682,137,3.15,138,1.682,139,2.586,140,2.586,141,2.586,142,1.682,143,1.682,144,1.682,145,1.682,146,1.682,147,1.682,148,3.15,149,3.15,150,2.586,151,1.344,152,1.682,153,1.682,154,1.682,155,1.682,156,1.682,157,3.15,158,1.682,159,2.586,160,1.682,161,1.682,162,1.682,163,1.682,164,1.682,165,1.682,166,1.682,167,1.682,168,1.682,169,4.028,170,1.682,171,1.682,172,2.586,173,2.586,174,2.586,175,1.682,176,0.821,177,1.682,178,1.344,179,1.682,180,1.682,181,1.344,182,1.682,183,0.954,184,2.586,185,2.066,186,1.682,187,3.535,188,1.682,189,1.682,190,1.682,191,0.018,192,0.027,193,0.018]],["title/modules/AppModule.html",[194,1.317,195,1.139]],["body/modules/AppModule.html",[1,1.932,3,0.897,4,0.897,9,0.542,40,0.057,58,0.897,74,1.366,75,0.897,78,0.768,79,0.442,123,1.865,183,1.865,191,0.035,192,0.043,193,0.035,194,1.605,195,2.19,196,1.605,197,1.605,198,3.018,199,2.57,200,2.348,201,2.19,202,2.626,203,2.626,204,2.626,205,2.443,206,2.757,207,1.605,208,3.287,209,3.287,210,2.348,211,2.757,212,2.19,213,3.287,214,4.139,215,1.203,216,4.139,217,3.287,218,2.19,219,3.287,220,3.287,221,3.287]],["title/classes/AppPage.html",[79,0.363,222,1.797]],["body/classes/AppPage.html",[3,1.133,4,0.901,9,0.545,14,2.575,19,0.901,26,1.52,37,2.012,40,0.057,51,1.3,58,0.901,74,1.133,78,0.771,79,0.444,90,2.012,104,1.209,111,2.2,185,2.638,191,0.035,192,0.044,193,0.035,222,2.765,223,2.2,224,2.638,225,4.762,226,4.762,227,4.762,228,4.762,229,3.302,230,5.008,231,3.302,232,4.539,233,3.302,234,3.302,235,3.302,236,3.302,237,3.302,238,3.302,239,3.302,240,3.302,241,4.15,242,3.302,243,3.302,244,3.302,245,2.638,246,1.873,247,3.302]],["title/modules/AppServerModule.html",[194,1.317,248,1.317]],["body/modules/AppServerModule.html",[1,1.827,3,0.831,4,0.831,9,0.502,36,1.384,40,0.057,43,1.443,59,0.711,74,1.395,75,1.076,76,1.486,77,1.486,78,0.92,79,0.53,110,1.727,123,1.727,183,1.727,191,0.032,192,0.041,193,0.032,194,1.486,195,2.071,196,1.486,197,1.486,198,2.028,199,2.479,200,2.235,201,2.028,206,2.625,207,1.486,210,1.727,211,2.625,212,2.028,215,1.114,218,2.625,248,2.437,249,2.431,250,3.044,251,3.044,252,2.028,253,3.148,254,2.028,255,2.431,256,1.486,257,1.248,258,1.486,259,2.621,260,1.727,261,2.028,262,1.486,263,2.028,264,1.924,265,2.028,266,1.486,267,1.486,268,2.028,269,2.028,270,2.028,271,2.028,272,1.114,273,1.727,274,2.028]],["title/injectables/DeviceDetectorService.html",[36,0.854,257,0.854]],["body/injectables/DeviceDetectorService.html",[3,0.798,4,0.328,9,0.198,14,0.683,19,0.328,20,0.967,21,1.272,23,1.972,26,0.725,28,1.659,31,1.123,32,1.123,33,1.123,34,0.587,36,0.627,37,1.922,39,1.578,40,0.058,41,1.578,42,1.499,43,1.183,47,2.515,48,1.922,49,1.874,51,1.118,52,0.967,57,1.552,58,0.949,59,1.213,60,1.697,61,1.833,62,1.697,63,1.833,74,0.798,75,0.328,78,0.683,79,0.162,82,0.802,89,1.972,90,1.922,104,0.924,115,1.659,124,1.468,125,1.622,126,1.468,176,1.232,191,0.013,192,0.021,193,0.013,215,0.441,246,0.683,256,0.587,257,0.627,258,0.587,266,0.587,267,0.967,272,1.684,275,0.802,276,2.246,277,2.61,278,0.587,279,1.345,280,2.431,281,1.582,282,0.961,283,1.98,284,1.203,285,1.681,286,1.319,287,1.203,288,2.855,289,1.972,290,2.907,291,1.319,292,1.203,293,1.319,294,1.203,295,1.319,296,1.203,297,1.203,298,1.203,299,1.203,300,1.203,301,1.203,302,1.203,303,0.725,304,1.203,305,1.203,306,1.203,307,0.961,308,0.961,309,0.961,310,0.587,311,1.582,312,1.319,313,0.802,314,1.319,315,1.319,316,2.431,317,1.431,318,0.961,319,0.802,320,2.015,321,1.681,322,1.582,323,2.015,324,0.961,325,2.153,326,2.153,327,2.153,328,2.581,329,0.961,330,0.961,331,0.802,332,0.961,333,0.961,334,0.961,335,0.961,336,0.961,337,2.335,338,0.802,339,0.802,340,1.582,341,1.582,342,0.961,343,0.961,344,0.961,345,0.961,346,0.961,347,1.582,348,1.582,349,1.582,350,1.582,351,1.582,352,1.582,353,0.961,354,0.961,355,0.961,356,0.961,357,0.961,358,0.961,359,0.961,360,2.015,361,0.961,362,2.335,363,0.961,364,1.582,365,0.802,366,0.961,367,0.802,368,1.582,369,1.582,370,2.015,371,0.683,372,1.582,373,0.961,374,1.582,375,0.961,376,1.319,377,0.961,378,0.961,379,0.961,380,2.015,381,0.961,382,0.961,383,0.961,384,0.961,385,0.961,386,1.582,387,0.961,388,0.961,389,0.961,390,0.961,391,0.961,392,0.961,393,0.961,394,0.961,395,1.582,396,0.961,397,2.015,398,2.335,399,1.681,400,1.582,401,2.335,402,0.961,403,1.582,404,0.961,405,0.961,406,0.961,407,0.961,408,0.961,409,0.961,410,0.961,411,0.961,412,1.582,413,0.961,414,0.961]],["title/interfaces/DeviceInfo.html",[21,0.987,310,1.317]],["body/interfaces/DeviceInfo.html",[3,0.892,4,0.398,9,0.24,14,0.826,19,0.398,20,1.128,21,1.389,23,1.629,28,0.826,36,0.461,40,0.058,42,1.51,48,0.976,49,1.852,51,0.973,52,0.711,57,1.742,58,1.085,59,1.185,60,1.941,61,2.152,62,1.941,63,2.152,74,0.892,75,0.398,78,0.763,79,0.196,82,0.97,89,1.629,90,2.005,104,0.846,115,1.854,124,1.506,125,1.679,126,1.506,176,1.402,191,0.015,192,0.024,193,0.015,215,0.533,246,0.826,256,0.711,257,0.732,258,0.711,266,0.711,267,0.711,272,1.829,276,0.711,277,0.826,278,0.711,279,1.197,280,1.854,285,1.539,286,0.97,288,2.748,289,1.629,290,2.899,291,0.97,293,0.97,295,0.97,303,0.533,307,1.163,308,1.163,309,1.163,310,0.711,311,1.845,312,1.539,313,0.97,314,1.539,315,1.539,316,2.563,317,1.629,318,1.163,319,0.97,320,2.294,321,1.913,322,1.845,323,2.294,324,1.163,325,2.375,326,2.375,327,2.375,328,2.847,329,1.163,330,1.163,331,0.97,332,1.163,333,1.163,334,1.163,335,1.163,336,1.163,337,2.611,338,0.97,339,0.97,340,1.845,341,1.845,342,1.163,343,1.163,344,1.163,345,1.163,346,1.163,347,1.845,348,1.845,349,1.845,350,1.845,351,1.845,352,1.845,353,1.163,354,1.163,355,1.163,356,1.163,357,1.163,358,1.163,359,1.163,360,2.294,361,1.163,362,2.611,363,1.163,364,1.845,365,0.97,366,1.163,367,0.97,368,1.845,369,1.845,370,2.294,371,0.826,372,1.845,373,1.163,374,1.845,375,1.163,376,1.539,377,1.163,378,1.163,379,1.163,380,2.294,381,1.163,382,1.163,383,1.163,384,1.163,385,1.163,386,1.845,387,1.163,388,1.163,389,1.163,390,1.163,391,1.163,392,1.163,393,1.163,394,1.163,395,1.845,396,1.163,397,2.294,398,2.611,399,1.913,400,1.845,401,2.611,402,1.163,403,1.845,404,1.163,405,1.163,406,1.163,407,1.163,408,1.163,409,1.163,410,1.163,411,1.163,412,1.845,413,1.163,414,1.163,415,1.456]],["title/pipes/KeysPipe.html",[205,1.317,416,1.53]],["body/pipes/KeysPipe.html",[3,0.906,4,0.906,9,0.547,11,2.65,26,1.214,37,1.401,39,1.62,40,0.057,41,2.221,42,1.214,43,1.214,47,1.882,48,2.076,51,0.906,74,0.906,75,0.906,78,0.775,79,0.447,90,1.401,151,2.65,176,1.62,191,0.035,192,0.044,193,0.035,205,2.032,272,1.665,316,2.581,371,1.882,416,2.361,417,3.317,418,2.65,419,4.77,420,4.162,421,4.549,422,3.317,423,4.162,424,3.317,425,4.162,426,3.317,427,4.549,428,3.317,429,4.162,430,4.162,431,3.317]],["title/classes/ReTree.html",[79,0.363,279,0.987]],["body/classes/ReTree.html",[3,0.759,4,0.759,9,0.458,19,0.759,26,1.359,34,2.041,37,1.766,39,1.812,40,0.058,41,1.812,42,1.359,43,1.359,51,1.013,55,2.473,59,1.042,78,0.649,79,0.374,90,2.161,119,2.965,191,0.029,192,0.039,193,0.029,223,1.852,246,2.53,272,1.816,276,2.178,279,1.359,280,2.712,303,1.359,321,2.473,376,2.473,399,1.852,432,2.22,433,2.78,434,2.78,435,2.78,436,2.78,437,3.712,438,2.78,439,3.712,440,4.197,441,2.78,442,3.712,443,3.712,444,2.78,445,3.712,446,3.712,447,3.712,448,2.78,449,2.78,450,2.78,451,4.179,452,2.78,453,2.78,454,3.712,455,2.78,456,2.78,457,2.78,458,2.78]],["title/injectables/UniversalDeviceDetectorService.html",[257,0.854,264,1.317]],["body/injectables/UniversalDeviceDetectorService.html",[1,1.105,3,0.565,4,0.565,9,0.341,19,0.565,20,1.474,21,0.757,23,2.023,26,1.105,28,2.023,31,1.713,32,1.713,33,1.713,34,1.01,36,1.624,37,2.133,39,2.035,40,0.057,41,2.035,42,1.748,43,1.645,47,2.826,48,2.104,49,2.035,51,1.138,52,1.01,57,1.276,58,0.824,59,1.076,60,1.474,61,1.713,62,1.474,63,1.713,74,1.283,75,0.824,76,1.01,77,1.01,78,0.705,79,0.406,89,2.023,104,0.757,110,1.174,124,0.874,125,0.874,126,0.874,191,0.022,192,0.032,193,0.022,195,1.276,199,1.174,200,1.174,210,1.174,211,2.012,212,1.379,215,0.757,218,1.379,248,1.01,252,1.379,253,2.412,254,1.379,255,1.653,256,1.01,257,0.957,258,1.01,259,2.614,260,1.174,261,1.379,262,1.01,263,1.379,264,1.741,265,2.012,266,1.01,267,1.474,268,1.379,269,1.379,270,1.379,271,1.379,272,1.748,273,1.174,274,1.379,275,1.379,279,1.305,280,2.614,281,2.412,282,1.653,285,1.379,286,1.379,288,2.612,289,2.023,290,2.376,291,1.379,293,1.379,295,1.379,303,0.757,459,2.069,460,5.017,461,2.069,462,2.069,463,2.069,464,2.069,465,2.069,466,2.069,467,2.069,468,2.069,469,2.069,470,2.069,471,2.069,472,2.069,473,2.069,474,2.069,475,2.069]],["title/contributing.html",[476,1.515,477,1.29,478,2.273]],["body/contributing.html",[9,0.446,25,2.162,40,0.048,101,1.803,104,0.991,106,1.803,112,2.913,113,2.162,118,2.162,121,2.162,181,2.162,191,0.028,192,0.038,193,0.028,207,1.321,259,1.535,273,1.535,303,1.335,325,1.803,365,1.803,479,4.123,480,3.646,481,2.706,482,2.913,483,2.706,484,4.123,485,4.123,486,3.646,487,2.706,488,2.706,489,3.646,490,2.706,491,3.646,492,3.646,493,4.123,494,3.646,495,3.525,496,3.646,497,2.706,498,1.803,499,2.706,500,2.706,501,2.706,502,4.606,503,2.706,504,4.123,505,2.913,506,4.606,507,2.706,508,4.606,509,2.706,510,3.679,511,3.679,512,3.294,513,2.706,514,3.646,515,2.706,516,2.706,517,2.706,518,2.706,519,2.706,520,2.706,521,2.706,522,2.162,523,2.706,524,2.706,525,2.706,526,2.706,527,2.706,528,2.706,529,2.706,530,2.706,531,2.706,532,2.706,533,2.706,534,2.706,535,2.706,536,2.706,537,3.646,538,4.123,539,2.706,540,4.123,541,2.913,542,2.162,543,2.706,544,3.646,545,2.706,546,2.706,547,2.706,548,2.162,549,2.706,550,2.706,551,2.706,552,3.646,553,2.913,554,2.706,555,2.706,556,2.706,557,3.646,558,2.706,559,2.706,560,2.706,561,2.706,562,2.706,563,2.706,564,2.706,565,2.706,566,2.706,567,2.706,568,2.706,569,2.706,570,2.706,571,2.706,572,2.706,573,2.706,574,2.706,575,2.162,576,2.706,577,2.706,578,2.706,579,2.706,580,2.706,581,2.706,582,2.706,583,2.706,584,2.706,585,2.706,586,2.429,587,2.706,588,2.706,589,2.706,590,2.706,591,2.162,592,1.535]],["title/coverage.html",[593,2.905]],["body/coverage.html",[0,1.218,1,0.914,9,0.412,10,1.993,13,1.416,21,0.914,36,0.791,40,0.056,42,0.914,57,1.054,59,1.221,79,0.464,115,1.416,178,1.993,191,0.026,192,0.036,193,0.026,205,1.218,222,1.663,224,1.993,245,1.993,252,1.663,257,1.093,264,1.218,276,2.552,277,2.954,278,1.93,279,0.914,303,0.914,310,1.218,317,1.416,338,1.663,339,1.663,371,3.03,416,1.416,418,1.993,432,1.993,498,1.663,593,1.993,594,2.495,595,2.495,596,2.495,597,3.576,598,3.45,599,5.288,600,1.663,601,5.26,602,2.495,603,2.495,604,2.495,605,2.495,606,3.45,607,2.495,608,3.45,609,2.495,610,5.132,611,2.495,612,2.495,613,2.495,614,2.495,615,2.495,616,2.495,617,2.495,618,2.495,619,2.495,620,2.495,621,2.495,622,2.495,623,2.495,624,2.495,625,2.495]],["title/dependencies.html",[197,1.578,586,1.515]],["body/dependencies.html",[40,0.057,58,1.182,59,0.826,75,0.966,76,1.727,77,1.727,191,0.037,192,0.045,193,0.037,197,1.727,210,2.656,215,1.295,254,2.357,260,2.007,262,1.727,626,3.537,627,5.248,628,3.537,629,3.537,630,3.537,631,3.537,632,3.537,633,3.537,634,3.537,635,3.537,636,3.537,637,3.537,638,3.537,639,3.537,640,3.537,641,3.537,642,3.537,643,3.537,644,3.537,645,3.537,646,3.537,647,3.537,648,2.825,649,3.537,650,3.537,651,3.537]],["title/miscellaneous/enumerations.html",[652,1.29,653,2.581]],["body/miscellaneous/enumerations.html",[19,1.034,40,0.055,48,2.187,59,0.885,62,2.204,124,1.907,125,1.907,126,1.907,191,0.04,192,0.047,193,0.04,276,1.85,277,2.149,278,2.355,312,3.008,313,3.008,314,3.008,315,3.008,652,2.149,653,3.026,654,4.515]],["title/miscellaneous/functions.html",[652,1.29,655,2.581]],["body/miscellaneous/functions.html",[13,2.802,19,1.095,40,0.053,51,1.274,52,1.958,191,0.042,192,0.049,193,0.042,597,3.203,600,3.291,652,2.275,655,3.203,656,4.668,657,4.01]],["title/index.html",[19,0.621,476,1.515,477,1.29]],["body/index.html",[0,1.871,9,0.325,12,1.576,13,1.968,15,1.576,17,1.576,20,0.963,21,0.722,26,0.722,31,1.654,32,1.654,33,1.119,34,0.963,36,1.295,40,0.057,43,1.067,44,1.576,49,0.963,51,1.168,55,1.314,57,1.232,58,1.046,59,1.19,60,0.963,74,1.209,75,0.796,76,1.996,77,2.162,78,0.681,79,0.392,87,1.576,88,1.576,91,1.576,92,1.576,93,1.576,96,2.77,97,1.576,98,1.576,99,1.576,100,1.576,101,1.314,102,1.576,103,1.576,104,0.722,105,1.576,106,1.943,107,1.576,108,2.77,109,2.329,110,1.968,111,2.95,116,1.576,124,1.232,125,1.232,126,1.232,191,0.021,192,0.031,193,0.021,215,0.722,256,0.963,257,0.924,258,0.963,259,2.174,260,1.119,261,1.314,262,0.963,263,1.314,264,1.424,265,1.314,266,0.963,267,0.963,268,1.314,269,1.314,270,1.314,271,1.314,272,0.722,273,1.654,274,1.314,278,0.963,279,0.722,303,0.722,316,1.968,317,1.654,319,1.943,331,1.943,367,1.943,440,1.576,477,1.119,482,2.77,495,1.576,505,1.576,510,1.576,511,1.576,512,1.576,522,3.418,541,2.329,542,2.329,548,1.576,553,1.576,575,1.576,586,1.943,591,3.537,592,1.119,600,2.851,648,1.576,658,1.973,659,1.973,660,2.77,661,1.973,662,1.973,663,1.973,664,1.973,665,1.973,666,3.831,667,1.973,668,2.916,669,1.973,670,1.973,671,1.973,672,2.916,673,1.973,674,1.973,675,1.973,676,1.973,677,1.973,678,1.973,679,2.916,680,2.916,681,2.916,682,3.831,683,1.973,684,1.973,685,2.916,686,1.973,687,2.916,688,1.973,689,1.973,690,1.973,691,1.973,692,1.973,693,1.973,694,2.916,695,1.973,696,1.973,697,1.576,698,1.973,699,1.973,700,1.973,701,1.973,702,1.973,703,2.329,704,1.973,705,1.973,706,1.973,707,1.973,708,1.973,709,1.973,710,1.973,711,2.916,712,1.973,713,1.973,714,1.973,715,2.916,716,1.973,717,1.973,718,1.973,719,1.973,720,1.973,721,1.973,722,1.973,723,2.916,724,3.468,725,1.973,726,1.973,727,2.916,728,1.973,729,1.973,730,1.973,731,1.973,732,1.973,733,1.973,734,3.468,735,1.973,736,1.973,737,1.973,738,1.973,739,1.973,740,2.916,741,1.973,742,1.973,743,1.973,744,1.973,745,1.973,746,1.576]],["title/license.html",[476,1.515,477,1.29,592,1.29]],["body/license.html",[40,0.044,191,0.035,192,0.044,193,0.035,207,1.616,262,1.616,289,1.878,326,2.205,327,2.205,498,2.205,592,1.878,660,3.32,697,2.644,703,2.644,746,2.644,747,4.544,748,3.31,749,3.31,750,3.31,751,4.156,752,3.31,753,3.31,754,3.31,755,3.31,756,3.31,757,3.31,758,4.156,759,5.189,760,3.31,761,3.31,762,4.544,763,3.31,764,4.156,765,3.31,766,3.31,767,3.31,768,3.31,769,3.31,770,3.31,771,3.31,772,3.31,773,3.31,774,4.156,775,3.31,776,3.31,777,3.31,778,3.31,779,3.31,780,3.31,781,4.156,782,4.156,783,3.31,784,3.31,785,3.31,786,3.31,787,3.31,788,3.31,789,3.31,790,3.31,791,3.31,792,3.31,793,3.31,794,3.31,795,3.31,796,3.31,797,3.31,798,3.31,799,3.31,800,3.31,801,3.31,802,3.31,803,3.31,804,3.31,805,3.31,806,3.31,807,3.31,808,3.31,809,3.31,810,3.31]],["title/modules.html",[196,1.776]],["body/modules.html",[40,0.05,58,1.289,191,0.043,192,0.05,193,0.043,195,1.728,196,1.997,248,1.997,811,4.722,812,4.722,813,4.722]],["title/overview.html",[814,2.905]],["body/overview.html",[0,1.762,1,1.928,40,0.054,123,2.047,176,2.306,183,2.047,191,0.038,192,0.046,193,0.038,194,1.762,195,2.208,196,1.762,197,1.762,198,2.404,199,2.047,200,2.047,201,2.404,202,2.882,203,2.882,204,2.882,205,2.306,206,2.921,207,1.762,223,2.404,248,2.458,249,2.882,275,2.404,310,1.762,416,2.047,814,2.882,815,4.723]]],"invertedIndex":[["",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":371,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"coverage.html":{}}}],["0.10.3",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["0.6",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":622,"title":{},"body":{"coverage.html":{}}}],["08/11/2016",{"_index":436,"title":{},"body":{"classes/ReTree.html":{}}}],["1",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"overview.html":{}}}],["1.1.20150312",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":624,"title":{},"body":{"coverage.html":{}}}],["10.0.2",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["100px",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["11.0.2",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":346,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["2",{"_index":815,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["2.0.5",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["2021",{"_index":749,"title":{},"body":{"license.html":{}}}],["20px",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":623,"title":{},"body":{"coverage.html":{}}}],["4.15.2",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["40px",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["4px",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["5",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["6",{"_index":658,"title":{},"body":{"index.html":{}}}],["6.5.5",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["600px",{"_index":138,"title":{},"body":{"components/AppComponent.html":{}}}],["9.x",{"_index":729,"title":{},"body":{"index.html":{}}}],["__buttons",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["__input",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["__non_webpack_require__",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":780,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["accessible",{"_index":334,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["accessors",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["action",{"_index":804,"title":{},"body":{"license.html":{}}}],["active",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["actual",{"_index":364,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["actual_component",{"_index":190,"title":{},"body":{"components/AppComponent.html":{}}}],["add",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["agains",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["agent",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["ahsan",{"_index":326,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{}}}],["ahsanayaz",{"_index":435,"title":{},"body":{"classes/ReTree.html":{}}}],["align",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["already",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["amazing",{"_index":738,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":772,"title":{},"body":{"license.html":{}}}],["android",{"_index":367,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["angular",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["angular/cli",{"_index":711,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":215,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/compiler",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/forms",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["angular2",{"_index":740,"title":{},"body":{"index.html":{}}}],["animations",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["aot",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app.component",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":255,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["app.server.module.ts",{"_index":695,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"overview.html":{}}}],["appid",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["apply",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["applydevice",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["applydevice(useragent",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["appmodule",{"_index":195,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":222,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["appropriate",{"_index":117,"title":{},"body":{"components/AppComponent.html":{}}}],["appservermodule",{"_index":248,"title":{"modules/AppServerModule.html":{}},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"modules.html":{},"overview.html":{}}}],["arising",{"_index":808,"title":{},"body":{"license.html":{}}}],["array.isarray(regex",{"_index":456,"title":{},"body":{"classes/ReTree.html":{}}}],["array.isarray(regex.and",{"_index":449,"title":{},"body":{"classes/ReTree.html":{}}}],["array.isarray(regex.or",{"_index":452,"title":{},"body":{"classes/ReTree.html":{}}}],["ask",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["assigned",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["associated",{"_index":760,"title":{},"body":{"license.html":{}}}],["author",{"_index":325,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["authors",{"_index":798,"title":{},"body":{"license.html":{}}}],["available",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["ayaz",{"_index":327,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"license.html":{}}}],["back",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["badges",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["based",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["before",{"_index":537,"title":{},"body":{"contributing.html":{}}}],["block",{"_index":134,"title":{},"body":{"components/AppComponent.html":{}}}],["boilerplate",{"_index":742,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["bootstrap",{"_index":199,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"overview.html":{}}}],["branch",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["browse",{"_index":813,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.get",{"_index":240,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["browser_version",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["browser_versions_re",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["browser_versions_re_map",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["browsermodule",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule.withservertransition",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["browsers",{"_index":338,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["browsers_re",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["bug",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":709,"title":{},"body":{"index.html":{}}}],["buildrun",{"_index":710,"title":{},"body":{"index.html":{}}}],["button",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["c",{"_index":748,"title":{},"body":{"license.html":{}}}],["catch",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["cd",{"_index":714,"title":{},"body":{"index.html":{}}}],["center",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["change",{"_index":719,"title":{},"body":{"index.html":{}}}],["change_log.md",{"_index":721,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["changelog.md",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["changes",{"_index":575,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["charge",{"_index":755,"title":{},"body":{"license.html":{}}}],["check",{"_index":398,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["child",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["ci",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":801,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{"classes/AppPage.html":{},"classes/ReTree.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["classes",{"_index":223,"title":{},"body":{"classes/AppPage.html":{},"classes/ReTree.html":{},"overview.html":{}}}],["classlist.js",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["cli",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["close",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["cluster_appmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":204,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appservermodule",{"_index":249,"title":{},"body":{"modules/AppServerModule.html":{},"overview.html":{}}}],["cluster_appservermodule_bootstrap",{"_index":251,"title":{},"body":{"modules/AppServerModule.html":{}}}],["cluster_appservermodule_imports",{"_index":250,"title":{},"body":{"modules/AppServerModule.html":{}}}],["column",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["comment",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["commonmodule",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["community",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["compares",{"_index":397,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["compatibility",{"_index":725,"title":{},"body":{"index.html":{}}}],["compatible",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_template",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{}}}],["conditions",{"_index":779,"title":{},"body":{"license.html":{}}}],["connection",{"_index":809,"title":{},"body":{"license.html":{}}}],["console.log('hello",{"_index":675,"title":{},"body":{"index.html":{}}}],["console.log('ua",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(isdesktopdevice",{"_index":684,"title":{},"body":{"index.html":{}}}],["console.log(ismobile",{"_index":678,"title":{},"body":{"index.html":{}}}],["console.log(istablet",{"_index":683,"title":{},"body":{"index.html":{}}}],["console.log(this.deviceinfo",{"_index":677,"title":{},"body":{"index.html":{}}}],["const",{"_index":316,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"index.html":{}}}],["constants",{"_index":308,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.browser_versions_re[this.browser",{"_index":375,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.browsers.unknown",{"_index":373,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.chrome_book",{"_index":411,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.ps4",{"_index":410,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.devices.unknown",{"_index":412,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.general.uknown",{"_index":385,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.mobiles_re[mobile",{"_index":404,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.tablets_re[ipad",{"_index":348,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants.tablets_re[mobile",{"_index":408,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[`${mapping.const}_re`][item",{"_index":354,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const].android",{"_index":363,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const].unknown",{"_index":369,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const][item",{"_index":343,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constants[mapping.const][key",{"_index":358,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["constructor",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["constructor(@inject(platform_id",{"_index":266,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["constructor(deviceservice",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(platformid",{"_index":282,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["constructor(private",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["consuming",{"_index":726,"title":{},"body":{"index.html":{}}}],["container",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["contract",{"_index":805,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":478,"title":{"contributing.html":{}},"body":{}}],["conventional",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":774,"title":{},"body":{"license.html":{}}}],["copy",{"_index":758,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":747,"title":{},"body":{"license.html":{}}}],["correct",{"_index":688,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":593,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["created",{"_index":434,"title":{},"body":{"classes/ReTree.html":{}}}],["creator",{"_index":741,"title":{},"body":{"index.html":{}}}],["credits",{"_index":732,"title":{},"body":{"index.html":{}}}],["current",{"_index":290,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["currentvalue",{"_index":360,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["cursor",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["d.ts",{"_index":702,"title":{},"body":{"index.html":{}}}],["damages",{"_index":802,"title":{},"body":{"license.html":{}}}],["deal",{"_index":761,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":810,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":198,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["default",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["defined",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["demo",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"index.html":{}}}],["demoapp",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":197,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deprecated",{"_index":659,"title":{},"body":{"index.html":{}}}],["desc",{"_index":328,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["description",{"_index":433,"title":{},"body":{"classes/ReTree.html":{}}}],["desktop",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["desktopdevices",{"_index":409,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["desktopdevices.indexof(this.device",{"_index":414,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["details",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["detection",{"_index":689,"title":{},"body":{"index.html":{}}}],["detector",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["detector.constants",{"_index":309,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["detector.constants.ts",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["detector.service.ts",{"_index":278,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["detector.service.ts:135",{"_index":284,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:155",{"_index":292,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:171",{"_index":294,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:191",{"_index":287,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:37",{"_index":305,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:38",{"_index":306,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:39",{"_index":301,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:40",{"_index":297,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:41",{"_index":299,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:42",{"_index":302,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:43",{"_index":298,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:44",{"_index":304,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:45",{"_index":300,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:46",{"_index":283,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector.service.ts:59",{"_index":296,"title":{},"body":{"injectables/DeviceDetectorService.html":{}}}],["detector/src/lib/device",{"_index":277,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["detector/src/lib/retree.ts",{"_index":432,"title":{},"body":{"classes/ReTree.html":{},"coverage.html":{}}}],["detector/src/lib/retree.ts:30",{"_index":441,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:5",{"_index":438,"title":{},"body":{"classes/ReTree.html":{}}}],["detector/src/lib/retree.ts:8",{"_index":444,"title":{},"body":{"classes/ReTree.html":{}}}],["developers",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":699,"title":{},"body":{"index.html":{}}}],["device",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["devicedetectorservice",{"_index":36,"title":{"injectables/DeviceDetectorService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["devicedetectorservice:135",{"_index":461,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:155",{"_index":463,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:171",{"_index":464,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:191",{"_index":462,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:37",{"_index":474,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:38",{"_index":475,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:39",{"_index":471,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:40",{"_index":466,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:41",{"_index":468,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:42",{"_index":472,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:43",{"_index":467,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:44",{"_index":473,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:45",{"_index":469,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:46",{"_index":470,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["devicedetectorservice:59",{"_index":465,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["deviceinfo",{"_index":21,"title":{"interfaces/DeviceInfo.html":{}},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["devices",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["devices_re",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["deviceservice",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["devicetype",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{}}}],["devicetype.desktop",{"_index":392,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.mobile",{"_index":390,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.tablet",{"_index":388,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devicetype.unknown",{"_index":393,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["devs",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["different",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["direction",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["directive",{"_index":186,"title":{},"body":{"components/AppComponent.html":{}}}],["directives",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["distribute",{"_index":770,"title":{},"body":{"license.html":{}}}],["docs",{"_index":541,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["docs/readme",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":498,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["don't",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["done",{"_index":730,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["earlier",{"_index":662,"title":{},"body":{"index.html":{}}}],["element",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{}}}],["element(by.css('app",{"_index":241,"title":{},"body":{"classes/AppPage.html":{}}}],["element.all(by.css('app",{"_index":244,"title":{},"body":{"classes/AppPage.html":{}}}],["elementarrayfinder",{"_index":232,"title":{},"body":{"classes/AppPage.html":{}}}],["end",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["engine",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["engine/tokens",{"_index":261,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["enhance",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["ensure",{"_index":686,"title":{},"body":{"index.html":{}}}],["enum",{"_index":311,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["enumerations",{"_index":653,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":608,"title":{},"body":{"coverage.html":{}}}],["epicfunction",{"_index":674,"title":{},"body":{"index.html":{}}}],["etc",{"_index":682,"title":{},"body":{"index.html":{}}}],["event",{"_index":797,"title":{},"body":{"license.html":{}}}],["example",{"_index":694,"title":{},"body":{"index.html":{}}}],["examples",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["exec",{"_index":437,"title":{},"body":{"classes/ReTree.html":{}}}],["exec(str",{"_index":439,"title":{},"body":{"classes/ReTree.html":{}}}],["existing",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["explain",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["exports",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["express",{"_index":262,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["express.express",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["expressjs",{"_index":693,"title":{},"body":{"index.html":{}}}],["extends",{"_index":265,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["fa",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["false",{"_index":399,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["far",{"_index":518,"title":{},"body":{"contributing.html":{}}}],["fast",{"_index":743,"title":{},"body":{"index.html":{}}}],["feature",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["feedback",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":703,"title":{},"body":{"index.html":{},"license.html":{}}}],["finally",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["first",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["fitness",{"_index":793,"title":{},"body":{"license.html":{}}}],["fix",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["flex",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["following",{"_index":697,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["fork",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":365,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"contributing.html":{}}}],["free",{"_index":754,"title":{},"body":{"license.html":{}}}],["function",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":655,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":777,"title":{},"body":{"license.html":{}}}],["g",{"_index":713,"title":{},"body":{"index.html":{}}}],["general",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["generate",{"_index":700,"title":{},"body":{"index.html":{}}}],["generator",{"_index":745,"title":{},"body":{"index.html":{}}}],["getdemoheadingtext",{"_index":225,"title":{},"body":{"classes/AppPage.html":{}}}],["getdeviceinfo",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["getdeviceinfoelements",{"_index":226,"title":{},"body":{"classes/AppPage.html":{}}}],["getisdesktop",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["getismobile",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["getistablet",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["getparagraphtext",{"_index":227,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":476,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["going",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["good",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["granted",{"_index":753,"title":{},"body":{"license.html":{}}}],["h1')).gettext",{"_index":247,"title":{},"body":{"classes/AppPage.html":{}}}],["hack",{"_index":344,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["hasn't",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["heading",{"_index":242,"title":{},"body":{"classes/AppPage.html":{}}}],["help",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["helper",{"_index":698,"title":{},"body":{"index.html":{}}}],["helping",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["helps",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{},"index.html":{}}}],["here",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["hereby",{"_index":752,"title":{},"body":{"license.html":{}}}],["holders",{"_index":799,"title":{},"body":{"license.html":{}}}],["holds",{"_index":696,"title":{},"body":{"index.html":{}}}],["home",{"_index":668,"title":{},"body":{"index.html":{}}}],["home.component.html",{"_index":670,"title":{},"body":{"index.html":{}}}],["home.component.scss",{"_index":669,"title":{},"body":{"index.html":{}}}],["homecomponent",{"_index":671,"title":{},"body":{"index.html":{}}}],["host",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["hover",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["html",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":672,"title":{},"body":{"index.html":{}}}],["i.e",{"_index":744,"title":{},"body":{"index.html":{}}}],["icon",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["idea",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["identifier",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ie10",{"_index":723,"title":{},"body":{"index.html":{}}}],["ie11",{"_index":724,"title":{},"body":{"index.html":{}}}],["img",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["implements",{"_index":424,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["implied",{"_index":789,"title":{},"body":{"license.html":{}}}],["import",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["important",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["imports",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["improve",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["improves",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["included",{"_index":783,"title":{},"body":{"license.html":{}}}],["including",{"_index":764,"title":{},"body":{"license.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["info.key",{"_index":128,"title":{},"body":{"components/AppComponent.html":{}}}],["info.value",{"_index":129,"title":{},"body":{"components/AppComponent.html":{}}}],["information",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"index.html":{}}}],["inherited",{"_index":460,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["initial",{"_index":330,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["initiated",{"_index":332,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["inject",{"_index":256,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["inject(request",{"_index":268,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["injectable",{"_index":257,"title":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{}},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["injectables",{"_index":275,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"overview.html":{}}}],["input",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["inspired",{"_index":733,"title":{},"body":{"index.html":{}}}],["install",{"_index":666,"title":{},"body":{"index.html":{}}}],["installation",{"_index":665,"title":{},"body":{"index.html":{}}}],["installed",{"_index":712,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":446,"title":{},"body":{"classes/ReTree.html":{}}}],["instead",{"_index":366,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["interface",{"_index":310,"title":{"interfaces/DeviceInfo.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":415,"title":{},"body":{"interfaces/DeviceInfo.html":{}}}],["ios",{"_index":345,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["ipad",{"_index":317,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{},"index.html":{}}}],["iphone",{"_index":679,"title":{},"body":{"index.html":{}}}],["isdesktop",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["isdesktop(useragent",{"_index":286,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["isdesktopdevice",{"_index":676,"title":{},"body":{"index.html":{}}}],["ismobile",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["ismobile(useragent",{"_index":291,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["isplatformbrowser",{"_index":307,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformbrowser(this.platformid",{"_index":320,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["isplatformserver",{"_index":263,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["isplatformserver(platformid",{"_index":270,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["issue",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["issues",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["istablet",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["istablet(useragent",{"_index":293,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["it's",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["item",{"_index":246,"title":{},"body":{"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["js",{"_index":648,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["js.map",{"_index":701,"title":{},"body":{"index.html":{}}}],["justify",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["key",{"_index":427,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keys",{"_index":419,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keys.push",{"_index":429,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["keyspipe",{"_index":205,"title":{"pipes/KeysPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["kind",{"_index":788,"title":{},"body":{"license.html":{}}}],["landscape",{"_index":315,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["landscape)').matches",{"_index":382,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["later",{"_index":333,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["latest",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["leave",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["liability",{"_index":803,"title":{},"body":{"license.html":{}}}],["liable",{"_index":800,"title":{},"body":{"license.html":{}}}],["library",{"_index":522,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["license",{"_index":592,"title":{"license.html":{}},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["limitation",{"_index":765,"title":{},"body":{"license.html":{}}}],["limited",{"_index":790,"title":{},"body":{"license.html":{}}}],["links",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["lint",{"_index":705,"title":{},"body":{"index.html":{}}}],["lintto",{"_index":707,"title":{},"body":{"index.html":{}}}],["live",{"_index":663,"title":{},"body":{"index.html":{}}}],["localhost:4200",{"_index":718,"title":{},"body":{"index.html":{}}}],["lock",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":720,"title":{},"body":{"index.html":{}}}],["logo",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["lot",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["macintel",{"_index":350,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mainmodule",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["make",{"_index":510,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["manually",{"_index":692,"title":{},"body":{"index.html":{}}}],["many",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["map(key",{"_index":357,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mapping.prop",{"_index":361,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mappings",{"_index":336,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["mappings.foreach(mapping",{"_index":340,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["margin",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["master",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":401,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["matching",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["max",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["means",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":792,"title":{},"body":{"license.html":{}}}],["merge",{"_index":768,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["methods",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["miscellaneous",{"_index":652,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":746,"title":{},"body":{"index.html":{},"license.html":{}}}],["mobile",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["mobiles_re",{"_index":617,"title":{},"body":{"coverage.html":{}}}],["modify",{"_index":767,"title":{},"body":{"license.html":{}}}],["module",{"_index":194,"title":{"modules/AppModule.html":{},"modules/AppServerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["modulefilename",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["modules",{"_index":196,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["muhammad",{"_index":750,"title":{},"body":{"license.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["navigateto",{"_index":228,"title":{},"body":{"classes/AppPage.html":{}}}],["navigator",{"_index":405,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.maxtouchpoints",{"_index":351,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["navigator.platform",{"_index":349,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["need",{"_index":691,"title":{},"body":{"index.html":{}}}],["needed",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":739,"title":{},"body":{"index.html":{}}}],["new",{"_index":303,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":715,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["nguniversal/express",{"_index":260,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["ngx",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{},"index.html":{}}}],["nofilter",{"_index":425,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["noninfringement",{"_index":796,"title":{},"body":{"license.html":{}}}],["noopanimationsmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["notice",{"_index":781,"title":{},"body":{"license.html":{}}}],["npm",{"_index":591,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"classes/ReTree.html":{},"index.html":{}}}],["obj",{"_index":355,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["obj[constants[mapping.const][item",{"_index":352,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object",{"_index":285,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["object.keys(constants.mobiles_re).find(mobile",{"_index":402,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants.tablets_re).find(mobile",{"_index":407,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants[mapping.const",{"_index":356,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["object.keys(constants[mapping.const]).reduce((obj",{"_index":342,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["obtaining",{"_index":757,"title":{},"body":{"license.html":{}}}],["one",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["opacity",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["open",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["opened",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["optional",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["orientation",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["orientationtype",{"_index":313,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["orientationtype.landscape",{"_index":383,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["orientationtype.portrait",{"_index":384,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["os",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["os_re",{"_index":618,"title":{},"body":{"coverage.html":{}}}],["os_version",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["os_versions",{"_index":339,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"coverage.html":{}}}],["os_versions_re",{"_index":619,"title":{},"body":{"coverage.html":{}}}],["os_versions_re_map",{"_index":620,"title":{},"body":{"coverage.html":{}}}],["others",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":807,"title":{},"body":{"license.html":{}}}],["out",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"contributing.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":814,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":586,"title":{"dependencies.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["padding",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["page",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["particular",{"_index":794,"title":{},"body":{"license.html":{}}}],["pass",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["paste",{"_index":120,"title":{},"body":{"components/AppComponent.html":{}}}],["permission",{"_index":751,"title":{},"body":{"license.html":{}}}],["permit",{"_index":775,"title":{},"body":{"license.html":{}}}],["person",{"_index":756,"title":{},"body":{"license.html":{}}}],["persons",{"_index":776,"title":{},"body":{"license.html":{}}}],["phone",{"_index":681,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":416,"title":{"pipes/KeysPipe.html":{}},"body":{"pipes/KeysPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":417,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["pipes/keys.pipe",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["pipetransform",{"_index":423,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["planning",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["platform_id",{"_index":258,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["platformid",{"_index":267,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["please",{"_index":542,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pointer",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["polyfills.ts",{"_index":728,"title":{},"body":{"index.html":{}}}],["portions",{"_index":785,"title":{},"body":{"license.html":{}}}],["portrait",{"_index":314,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["position",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["powered",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["pr",{"_index":553,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pr.pull",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["previousvalue",{"_index":362,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["private",{"_index":319,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["processing",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["project",{"_index":482,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["projects/.../device",{"_index":654,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../server.ts",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/demo/e2e/src/app.po.ts",{"_index":224,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["projects/demo/e2e/src/app.po.ts:13",{"_index":231,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:17",{"_index":233,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:5",{"_index":234,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/e2e/src/app.po.ts:9",{"_index":229,"title":{},"body":{"classes/AppPage.html":{}}}],["projects/demo/server.ts",{"_index":597,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["projects/demo/src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["projects/demo/src/app/app.component.ts:10",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:11",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:12",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:13",{"_index":38,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:23",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:27",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:31",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:35",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:39",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:44",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.component.ts:9",{"_index":64,"title":{},"body":{"components/AppComponent.html":{}}}],["projects/demo/src/app/app.module.ts",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["projects/demo/src/app/pipes/keys.pipe.ts",{"_index":418,"title":{},"body":{"pipes/KeysPipe.html":{},"coverage.html":{}}}],["projects/demo/src/app/pipes/keys.pipe.ts:7",{"_index":422,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["projects/demo/src/app/server.ts",{"_index":252,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{}}}],["projects/demo/src/app/server.ts:13",{"_index":459,"title":{},"body":{"injectables/UniversalDeviceDetectorService.html":{}}}],["projects/demo/src/environments/environment.prod.ts",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["projects/demo/src/environments/environment.ts",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["projects/ngx",{"_index":276,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["promise",{"_index":236,"title":{},"body":{"classes/AppPage.html":{}}}],["prop",{"_index":337,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["property",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["props",{"_index":421,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["props.indexof(key",{"_index":431,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["props.length",{"_index":426,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["propstoshow",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["protractor",{"_index":235,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":273,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"index.html":{}}}],["provided",{"_index":786,"title":{},"body":{"license.html":{}}}],["providedin",{"_index":318,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["providers",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"overview.html":{}}}],["prs",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["public",{"_index":280,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["publish",{"_index":769,"title":{},"body":{"license.html":{}}}],["pull",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":795,"title":{},"body":{"license.html":{}}}],["questions",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["re",{"_index":374,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["read",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["really",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["reduce((previousvalue",{"_index":359,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["refer",{"_index":727,"title":{},"body":{"index.html":{}}}],["regarding",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["regex",{"_index":440,"title":{},"body":{"classes/ReTree.html":{},"index.html":{}}}],["regex.and.every((item",{"_index":450,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.exec(str",{"_index":455,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.not",{"_index":454,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.or.some((item",{"_index":453,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.reduce((res",{"_index":457,"title":{},"body":{"classes/ReTree.html":{}}}],["regex.test(str",{"_index":448,"title":{},"body":{"classes/ReTree.html":{}}}],["regexp",{"_index":447,"title":{},"body":{"classes/ReTree.html":{}}}],["regexp(regex",{"_index":445,"title":{},"body":{"classes/ReTree.html":{}}}],["relative",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["relevant",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["reproduced",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":259,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"index.html":{}}}],["requests",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["required",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["res",{"_index":376,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["res[1",{"_index":378,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["reset",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}],["resetdeviceinfo",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["restriction",{"_index":763,"title":{},"body":{"license.html":{}}}],["result",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["retree",{"_index":279,"title":{"classes/ReTree.html":{}},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["return",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["right",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["rights",{"_index":766,"title":{},"body":{"license.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["rotate(45deg",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["running",{"_index":685,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["savein",{"_index":667,"title":{},"body":{"index.html":{}}}],["section",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["selenium",{"_index":238,"title":{},"body":{"classes/AppPage.html":{}}}],["sell",{"_index":773,"title":{},"body":{"license.html":{}}}],["send",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["sending",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":254,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"dependencies.html":{}}}],["serverapp",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["servermodule",{"_index":253,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["servethe",{"_index":716,"title":{},"body":{"index.html":{}}}],["service",{"_index":331,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"index.html":{}}}],["setdeviceinfo",{"_index":281,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["setdeviceinfo(ua",{"_index":295,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["sets",{"_index":329,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["shall",{"_index":782,"title":{},"body":{"license.html":{}}}],["share",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["shy",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["size",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["small",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":759,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["ssr",{"_index":664,"title":{},"body":{"index.html":{}}}],["started",{"_index":477,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["statements",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["str",{"_index":442,"title":{},"body":{"classes/ReTree.html":{}}}],["string",{"_index":272,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["subject",{"_index":778,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":771,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":784,"title":{},"body":{"license.html":{}}}],["summary",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["super(platformid",{"_index":269,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["super.setdeviceinfo((request.headers['user",{"_index":271,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["support",{"_index":811,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":511,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["svg",{"_index":812,"title":{},"body":{"modules.html":{}}}],["table",{"_index":245,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":625,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["tablets_re",{"_index":621,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["test",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"classes/ReTree.html":{}}}],["test(str",{"_index":443,"title":{},"body":{"classes/ReTree.html":{}}}],["tests",{"_index":495,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["testto",{"_index":708,"title":{},"body":{"index.html":{}}}],["text",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["text')).gettext",{"_index":243,"title":{},"body":{"classes/AppPage.html":{}}}],["thank",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["there's",{"_index":543,"title":{},"body":{"contributing.html":{}}}],["thing",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["this.applydevice",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["this.browser",{"_index":372,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.browser_version",{"_index":370,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.device",{"_index":395,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.deviceinfo",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.getdeviceinfo",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.isdesktop",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.ismobile",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.istablet",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["this.deviceservice.setdeviceinfo(useragent",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["this.devicetype",{"_index":386,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.epicfunction",{"_index":673,"title":{},"body":{"index.html":{}}}],["this.exec(str",{"_index":458,"title":{},"body":{"classes/ReTree.html":{}}}],["this.getdeviceinfo",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdesktop(this.useragent",{"_index":391,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.ismobile(this.useragent",{"_index":389,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.ismobile(useragent",{"_index":413,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.istablet",{"_index":387,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.istablet(useragent",{"_index":400,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.orientation",{"_index":380,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.os",{"_index":394,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.os_version",{"_index":396,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.exec(ua",{"_index":377,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(this.useragent",{"_index":347,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(ua",{"_index":353,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.retree.test(useragent",{"_index":403,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.setdeviceinfo(this.useragent",{"_index":324,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this.test(str",{"_index":451,"title":{},"body":{"classes/ReTree.html":{}}}],["this.ua",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["this.useragent",{"_index":288,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["this[mapping.prop",{"_index":341,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["this[mapping.prop][currentvalue",{"_index":368,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["threads",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["through",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["time",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["tips",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["took",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["top",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["tort",{"_index":806,"title":{},"body":{"license.html":{}}}],["transform",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"pipes/KeysPipe.html":{}}}],["transform(value",{"_index":420,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{}}}],["tried",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["true",{"_index":406,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["try",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["ts",{"_index":706,"title":{},"body":{"index.html":{}}}],["tscto",{"_index":704,"title":{},"body":{"index.html":{}}}],["tslib",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"classes/ReTree.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{}}}],["typeof",{"_index":321,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"classes/ReTree.html":{}}}],["typescript",{"_index":736,"title":{},"body":{"index.html":{}}}],["ua",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{}}}],["undefined",{"_index":323,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["unit",{"_index":548,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["universal",{"_index":687,"title":{},"body":{"index.html":{}}}],["universaldevicedetectorservice",{"_index":264,"title":{"injectables/UniversalDeviceDetectorService.html":{}},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"coverage.html":{},"index.html":{}}}],["unknown",{"_index":312,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"miscellaneous/enumerations.html":{}}}],["up",{"_index":717,"title":{},"body":{"index.html":{}}}],["update",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["updates",{"_index":722,"title":{},"body":{"index.html":{}}}],["usage",{"_index":335,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["use",{"_index":660,"title":{},"body":{"index.html":{},"license.html":{}}}],["useclass",{"_index":274,"title":{},"body":{"modules/AppServerModule.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["used",{"_index":735,"title":{},"body":{"index.html":{}}}],["useful",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["user",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["useragent",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"index.html":{}}}],["useragentinputval",{"_index":24,"title":{},"body":{"components/AppComponent.html":{}}}],["using",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{},"index.html":{}}}],["v1.5.2",{"_index":661,"title":{},"body":{"index.html":{}}}],["value",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"pipes/KeysPipe.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/enumerations.html":{}}}],["value.hasownproperty(key",{"_index":428,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["value[key",{"_index":430,"title":{},"body":{"pipes/KeysPipe.html":{}}}],["var",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["variable",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["version",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"contributing.html":{}}}],["version.full",{"_index":66,"title":{},"body":{"components/AppComponent.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"miscellaneous/functions.html":{}}}],["want",{"_index":505,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["warranties",{"_index":791,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":787,"title":{},"body":{"license.html":{}}}],["way",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["ways",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["wdpromise",{"_index":237,"title":{},"body":{"classes/AppPage.html":{}}}],["wdpromise.promise",{"_index":230,"title":{},"body":{"classes/AppPage.html":{}}}],["web",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["webdriver",{"_index":239,"title":{},"body":{"classes/AppPage.html":{}}}],["whether",{"_index":289,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{},"injectables/UniversalDeviceDetectorService.html":{},"license.html":{}}}],["width",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["window",{"_index":322,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.matchmedia",{"_index":379,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.matchmedia('(orientation",{"_index":381,"title":{},"body":{"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["window.navigator.useragent",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"injectables/DeviceDetectorService.html":{},"interfaces/DeviceInfo.html":{}}}],["windows",{"_index":680,"title":{},"body":{"index.html":{}}}],["without",{"_index":762,"title":{},"body":{"license.html":{}}}],["work",{"_index":734,"title":{},"body":{"index.html":{}}}],["working",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["works",{"_index":731,"title":{},"body":{"index.html":{}}}],["wrapper",{"_index":737,"title":{},"body":{"index.html":{}}}],["write",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["x1f389",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["you'll",{"_index":690,"title":{},"body":{"index.html":{}}}],["you're",{"_index":512,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["zone.js",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/AppServerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/demo/src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                deviceInfo\n                            \n                            \n                                propsToShow\n                            \n                            \n                                ua\n                            \n                            \n                                userAgentInputVal\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyDevice\n                            \n                            \n                                getDeviceInfo\n                            \n                            \n                                resetDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isMobile\n                                \n                                \n                                    isTablet\n                                \n                                \n                                    isDesktop\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(deviceService: DeviceDetectorService)\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/app.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        deviceService\n                                                  \n                                                        \n                                                                        DeviceDetectorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyDevice\n                        \n                        \n                    \n                \n            \n            \n                \napplyDevice(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/app.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.ua\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetDeviceInfo()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/app.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \nresetDeviceInfo()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/app.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propsToShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['userAgent', 'os', 'browser', 'device', 'os_version', 'browser_version', 'deviceType', 'orientation']\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAgentInputVal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : VERSION.full\n                        \n                    \n                        \n                            \n                                    Defined in projects/demo/src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isMobile\n                    \n                \n\n                \n                    \n                        getisMobile()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTablet\n                    \n                \n\n                \n                    \n                        getisTablet()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDesktop\n                    \n                \n\n                \n                    \n                        getisDesktop()\n                    \n                \n                            \n                                \n                                    Defined in projects/demo/src/app/app.component.ts:35\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, VERSION } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  propsToShow = ['userAgent', 'os', 'browser', 'device', 'os_version', 'browser_version', 'deviceType', 'orientation'];\n  deviceInfo = null;\n  version = VERSION.full;\n  userAgentInputVal = null;\n  ua;\n  constructor(private deviceService: DeviceDetectorService) {\n    try {\n      this.ua = window.navigator.userAgent;\n    } catch {\n      console.log('UA not available');\n    }\n    this.applyDevice();\n  }\n\n  getDeviceInfo(): void {\n    this.deviceInfo = this.deviceService.getDeviceInfo();\n  }\n\n  get isMobile(): boolean {\n    return this.deviceService.isMobile();\n  }\n\n  get isTablet(): boolean {\n    return this.deviceService.isTablet();\n  }\n\n  get isDesktop(): boolean {\n    return this.deviceService.isDesktop();\n  }\n\n  applyDevice(userAgent = this.ua): void {\n    this.deviceService.setDeviceInfo(userAgent);\n    this.getDeviceInfo();\n  }\n\n  resetDeviceInfo(): void {\n    this.applyDevice();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n        ngx-device-detector\n      \n\n      \n        An Angular 5+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent.\n      \n\n      \n        \n        \n        \n        \n      \n      \n    \n    \n      Demo is at Angular version = {{version}}\n    \n    \n      \n        Open this page from different devices to see the appropriate details\n      \n      Device Information\n    \n    \n      \n        \n          Test User Agent\n          \n          Paste the user agent (window.navigator.userAgent) here\n        \n      \n      \n        Apply test user agent\n        Reset device info\n      \n    \n    \n      \n        \n        \n        \n          Mobile\n        \n        \n          Tablet\n        \n        \n          Desktop\n        \n      \n      \n        \n          Property\n          Value\n        \n        \n          {{info.key}}\n          {{info.value}}\n        \n        \n          isDesktop()\n          {{isDesktop}}\n        \n        \n          isMobile()\n          {{isMobile}}\n        \n        \n          isTablet()\n          {{isTablet}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  position: relative;\n  display: block;\n}\n#demoApp {\n  max-width: 600px;\n  padding-top: 40px;\n  .demo-container {\n    .github-logo{\n      cursor: pointer;\n      position: absolute;\n      top: 10px;\n      right: 10px;\n      img {\n        width: 40px;\n        transform: rotate(45deg);\n      }\n      &:hover {\n        img {\n          opacity: 0.6;\n        }\n      }\n    }\n    .badges {\n      a {\n        margin-left: 4px;\n        margin-right: 4px;\n      }\n    }\n  }\n\n  .device-icon {\n    text-align: center;\n    padding: 20px;\n\n    .fa {\n      font-size: 100px;\n    }\n  }\n\n  .user-agent {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    &__input {\n      flex: 1;\n      input {\n        width: 100%;\n      }\n    }\n    &__buttons {\n      display: flex;\n      justify-content: flex-end;\n      > button {\n        &:first-child {\n          margin-right: 10px;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  ngx-device-detector                    An Angular 5+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent.                                                                      Demo is at Angular version = {{version}}                      Open this page from different devices to see the appropriate details            Device Information                                Test User Agent                    Paste the user agent (window.navigator.userAgent) here                            Apply test user agent        Reset device info                                                      Mobile                          Tablet                          Desktop                                      Property          Value                          {{info.key}}          {{info.value}}                          isDesktop()          {{isDesktop}}                          isMobile()          {{isMobile}}                          isTablet()          {{isTablet}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nAppModule -->\n\nKeysPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            KeysPipe\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { KeysPipe } from './pipes/keys.pipe';\nimport { CommonModule } from '@angular/common';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [AppComponent, KeysPipe],\n  imports: [NoopAnimationsModule, BrowserModule.withServerTransition({ appId: 'serverApp' }), CommonModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/demo/e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDemoHeadingText\n                            \n                            \n                                getDeviceInfoElements\n                            \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDemoHeadingText\n                        \n                        \n                    \n                \n            \n            \n                \ngetDemoHeadingText()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     wdpromise.Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDeviceInfoElements\n                        \n                        \n                    \n                \n            \n            \n                \ngetDeviceInfoElements()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ElementArrayFinder\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     wdpromise.Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/e2e/src/app.po.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     wdpromise.Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, ElementArrayFinder } from 'protractor';\nimport { promise as wdpromise } from 'selenium-webdriver';\n\nexport class AppPage {\n  navigateTo(): wdpromise.Promise {\n    return browser.get('/');\n  }\n\n  getDemoHeadingText(): wdpromise.Promise {\n    return element(by.css('app-root .demo-heading-text')).getText();\n  }\n\n  getDeviceInfoElements(): ElementArrayFinder {\n    return element.all(by.css('app-root .information-table .info-item'));\n  }\n\n  getParagraphText(): wdpromise.Promise {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppServerModule.html":{"url":"modules/AppServerModule.html","title":"module - AppServerModule","body":"\n                   \n\n\n\n\n    Modules\n    AppServerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppServerModule\n\n\n\ncluster_AppServerModule_imports\n\n\n\ncluster_AppServerModule_bootstrap\n\n\n\n\nAppModule\n\nAppModule\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/server.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AppModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)){\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}\n\n@NgModule({\n  imports: [AppModule, ServerModule],\n  bootstrap: [AppComponent],\n  providers: [{\n    provide: DeviceDetectorService,\n    useClass: UniversalDeviceDetectorService\n  },]\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DeviceDetectorService.html":{"url":"injectables/DeviceDetectorService.html","title":"injectable - DeviceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DeviceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/device-detector.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browser\n                            \n                            \n                                browser_version\n                            \n                            \n                                device\n                            \n                            \n                                deviceType\n                            \n                            \n                                orientation\n                            \n                            \n                                os\n                            \n                            \n                                os_version\n                            \n                            \n                                reTree\n                            \n                            \n                                ua\n                            \n                            \n                                userAgent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDeviceInfo\n                            \n                            \n                                    Public\n                                isDesktop\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                isTablet\n                            \n                            \n                                setDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeviceInfo()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         DeviceInfo\n\n                    \n                    \n                        the device information object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDesktop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDesktop(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a desktop device\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMobile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMobile(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a mobile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTablet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTablet(userAgent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a tablet\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \nsetDeviceInfo(ua)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ua\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReTree()\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAgent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/ngx-device-detector/src/lib/device-detector.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Constants from './device-detector.constants';\nimport { ReTree } from './retree';\n\nexport interface DeviceInfo {\n  userAgent: string;\n  os: string;\n  browser: string;\n  device: string;\n  os_version: string;\n  browser_version: string;\n  deviceType: string;\n  orientation: string;\n}\nexport enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n  Unknown = 'unknown',\n}\nexport enum OrientationType {\n  Portrait = 'portrait',\n  Landscape = 'landscape',\n}\n\nconst iPad = 'iPad';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceDetectorService {\n  ua = '';\n  userAgent = '';\n  os = '';\n  browser = '';\n  device = '';\n  os_version = '';\n  browser_version = '';\n  reTree = new ReTree();\n  deviceType = '';\n  orientation = '';\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n    if (isPlatformBrowser(this.platformId) && typeof window !== 'undefined') {\n      this.userAgent = window.navigator.userAgent;\n    }\n    this.setDeviceInfo(this.userAgent);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Sets the initial value of the device when the service is initiated.\n   * This value is later accessible for usage\n   */\n  setDeviceInfo(ua = this.userAgent): void {\n    if (ua !== this.userAgent) {\n      this.userAgent = ua;\n    }\n    const mappings = [\n      { const: 'OS', prop: 'os' },\n      { const: 'BROWSERS', prop: 'browser' },\n      { const: 'DEVICES', prop: 'device' },\n      { const: 'OS_VERSIONS', prop: 'os_version' },\n    ];\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const]).reduce((obj: any, item: any) => {\n        if (Constants[mapping.const][item] === 'device') {\n          // hack for iOS 13 Tablet\n          if (\n            isPlatformBrowser(this.platformId) &&\n            (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n              (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n          ) {\n            obj[Constants[mapping.const][item]] = iPad;\n            return Object;\n          }\n        }\n        obj[Constants[mapping.const][item]] = this.reTree.test(ua, Constants[`${mapping.const}_RE`][item]);\n        return obj;\n      }, {});\n    });\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const])\n        .map(key => {\n          return Constants[mapping.const][key];\n        })\n        .reduce((previousValue, currentValue) => {\n          if (mapping.prop === 'device' && previousValue === Constants[mapping.const].ANDROID) {\n            // if we have the actual device found, instead of 'Android', return the actual device\n            return this[mapping.prop][currentValue] ? currentValue : previousValue;\n          } else {\n            return previousValue === Constants[mapping.const].UNKNOWN && this[mapping.prop][currentValue]\n              ? currentValue\n              : previousValue;\n          }\n        }, Constants[mapping.const].UNKNOWN);\n    });\n\n    this.browser_version = '0';\n    if (this.browser !== Constants.BROWSERS.UNKNOWN) {\n      const re = Constants.BROWSER_VERSIONS_RE[this.browser];\n      const res = this.reTree.exec(ua, re);\n      if (!!res) {\n        this.browser_version = res[1];\n      }\n    }\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.orientation = window.matchMedia('(orientation: landscape)').matches\n        ? OrientationType.Landscape\n        : OrientationType.Portrait;\n    } else {\n      this.orientation = Constants.GENERAL.UKNOWN;\n    }\n\n    this.deviceType = this.isTablet()\n      ? DeviceType.Tablet\n      : this.isMobile(this.userAgent)\n      ? DeviceType.Mobile\n      : this.isDesktop(this.userAgent)\n      ? DeviceType.Desktop\n      : DeviceType.Unknown;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Returns the device information\n   * @returns the device information object.\n   */\n  public getDeviceInfo(): DeviceInfo {\n    const deviceInfo: DeviceInfo = {\n      userAgent: this.userAgent,\n      os: this.os,\n      browser: this.browser,\n      device: this.device,\n      os_version: this.os_version,\n      browser_version: this.browser_version,\n      deviceType: this.deviceType,\n      orientation: this.orientation,\n    };\n    return deviceInfo;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the mobile devices to check\n   * if the current device is a mobile and also check current device is tablet so it will return false.\n   * @returns whether the current device is a mobile\n   */\n  public isMobile(userAgent = this.userAgent): boolean {\n    if (this.isTablet(userAgent)) {\n      return false;\n    }\n    const match = Object.keys(Constants.MOBILES_RE).find(mobile => {\n      return this.reTree.test(userAgent, Constants.MOBILES_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the tablet devices to check\n   * if the current device is a tablet.\n   * @returns whether the current device is a tablet\n   */\n  public isTablet(userAgent = this.userAgent): boolean {\n    if (\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' && navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n    ) {\n      return true;\n    }\n    const match = Object.keys(Constants.TABLETS_RE).find(mobile => {\n      return !!this.reTree.test(userAgent, Constants.TABLETS_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the desktop devices to check\n   * if the current device is a desktop device.\n   * @returns whether the current device is a desktop device\n   */\n  public isDesktop(userAgent = this.userAgent): boolean {\n    const desktopDevices = [Constants.DEVICES.PS4, Constants.DEVICES.CHROME_BOOK, Constants.DEVICES.UNKNOWN];\n    if (this.device === Constants.DEVICES.UNKNOWN) {\n      if (this.isMobile(userAgent) || this.isTablet(userAgent)) {\n        return false;\n      }\n    }\n    return desktopDevices.indexOf(this.device) > -1;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DeviceInfo.html":{"url":"interfaces/DeviceInfo.html","title":"interface - DeviceInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DeviceInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/device-detector.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        browser\n                                \n                                \n                                        browser_version\n                                \n                                \n                                        device\n                                \n                                \n                                        deviceType\n                                \n                                \n                                        orientation\n                                \n                                \n                                        os\n                                \n                                \n                                        os_version\n                                \n                                \n                                        userAgent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        browser\n                                    \n                                \n                                \n                                    \n                                        browser:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        browser_version\n                                    \n                                \n                                \n                                    \n                                        browser_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        device\n                                    \n                                \n                                \n                                    \n                                        device:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deviceType\n                                    \n                                \n                                \n                                    \n                                        deviceType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orientation\n                                    \n                                \n                                \n                                    \n                                        orientation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os\n                                    \n                                \n                                \n                                    \n                                        os:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        os_version\n                                    \n                                \n                                \n                                    \n                                        os_version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userAgent\n                                    \n                                \n                                \n                                    \n                                        userAgent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { PLATFORM_ID, Inject, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as Constants from './device-detector.constants';\nimport { ReTree } from './retree';\n\nexport interface DeviceInfo {\n  userAgent: string;\n  os: string;\n  browser: string;\n  device: string;\n  os_version: string;\n  browser_version: string;\n  deviceType: string;\n  orientation: string;\n}\nexport enum DeviceType {\n  Mobile = 'mobile',\n  Tablet = 'tablet',\n  Desktop = 'desktop',\n  Unknown = 'unknown',\n}\nexport enum OrientationType {\n  Portrait = 'portrait',\n  Landscape = 'landscape',\n}\n\nconst iPad = 'iPad';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeviceDetectorService {\n  ua = '';\n  userAgent = '';\n  os = '';\n  browser = '';\n  device = '';\n  os_version = '';\n  browser_version = '';\n  reTree = new ReTree();\n  deviceType = '';\n  orientation = '';\n  constructor(@Inject(PLATFORM_ID) private platformId: any) {\n    if (isPlatformBrowser(this.platformId) && typeof window !== 'undefined') {\n      this.userAgent = window.navigator.userAgent;\n    }\n    this.setDeviceInfo(this.userAgent);\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Sets the initial value of the device when the service is initiated.\n   * This value is later accessible for usage\n   */\n  setDeviceInfo(ua = this.userAgent): void {\n    if (ua !== this.userAgent) {\n      this.userAgent = ua;\n    }\n    const mappings = [\n      { const: 'OS', prop: 'os' },\n      { const: 'BROWSERS', prop: 'browser' },\n      { const: 'DEVICES', prop: 'device' },\n      { const: 'OS_VERSIONS', prop: 'os_version' },\n    ];\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const]).reduce((obj: any, item: any) => {\n        if (Constants[mapping.const][item] === 'device') {\n          // hack for iOS 13 Tablet\n          if (\n            isPlatformBrowser(this.platformId) &&\n            (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n              (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n          ) {\n            obj[Constants[mapping.const][item]] = iPad;\n            return Object;\n          }\n        }\n        obj[Constants[mapping.const][item]] = this.reTree.test(ua, Constants[`${mapping.const}_RE`][item]);\n        return obj;\n      }, {});\n    });\n\n    mappings.forEach(mapping => {\n      this[mapping.prop] = Object.keys(Constants[mapping.const])\n        .map(key => {\n          return Constants[mapping.const][key];\n        })\n        .reduce((previousValue, currentValue) => {\n          if (mapping.prop === 'device' && previousValue === Constants[mapping.const].ANDROID) {\n            // if we have the actual device found, instead of 'Android', return the actual device\n            return this[mapping.prop][currentValue] ? currentValue : previousValue;\n          } else {\n            return previousValue === Constants[mapping.const].UNKNOWN && this[mapping.prop][currentValue]\n              ? currentValue\n              : previousValue;\n          }\n        }, Constants[mapping.const].UNKNOWN);\n    });\n\n    this.browser_version = '0';\n    if (this.browser !== Constants.BROWSERS.UNKNOWN) {\n      const re = Constants.BROWSER_VERSIONS_RE[this.browser];\n      const res = this.reTree.exec(ua, re);\n      if (!!res) {\n        this.browser_version = res[1];\n      }\n    }\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      this.orientation = window.matchMedia('(orientation: landscape)').matches\n        ? OrientationType.Landscape\n        : OrientationType.Portrait;\n    } else {\n      this.orientation = Constants.GENERAL.UKNOWN;\n    }\n\n    this.deviceType = this.isTablet()\n      ? DeviceType.Tablet\n      : this.isMobile(this.userAgent)\n      ? DeviceType.Mobile\n      : this.isDesktop(this.userAgent)\n      ? DeviceType.Desktop\n      : DeviceType.Unknown;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Returns the device information\n   * @returns the device information object.\n   */\n  public getDeviceInfo(): DeviceInfo {\n    const deviceInfo: DeviceInfo = {\n      userAgent: this.userAgent,\n      os: this.os,\n      browser: this.browser,\n      device: this.device,\n      os_version: this.os_version,\n      browser_version: this.browser_version,\n      deviceType: this.deviceType,\n      orientation: this.orientation,\n    };\n    return deviceInfo;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the mobile devices to check\n   * if the current device is a mobile and also check current device is tablet so it will return false.\n   * @returns whether the current device is a mobile\n   */\n  public isMobile(userAgent = this.userAgent): boolean {\n    if (this.isTablet(userAgent)) {\n      return false;\n    }\n    const match = Object.keys(Constants.MOBILES_RE).find(mobile => {\n      return this.reTree.test(userAgent, Constants.MOBILES_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the tablet devices to check\n   * if the current device is a tablet.\n   * @returns whether the current device is a tablet\n   */\n  public isTablet(userAgent = this.userAgent): boolean {\n    if (\n      isPlatformBrowser(this.platformId) &&\n      (!!this.reTree.test(this.userAgent, Constants.TABLETS_RE[iPad]) ||\n        (typeof navigator !== 'undefined' && navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1))\n    ) {\n      return true;\n    }\n    const match = Object.keys(Constants.TABLETS_RE).find(mobile => {\n      return !!this.reTree.test(userAgent, Constants.TABLETS_RE[mobile]);\n    });\n    return !!match;\n  }\n\n  /**\n   * @author Ahsan Ayaz\n   * @desc Compares the current device info with the desktop devices to check\n   * if the current device is a desktop device.\n   * @returns whether the current device is a desktop device\n   */\n  public isDesktop(userAgent = this.userAgent): boolean {\n    const desktopDevices = [Constants.DEVICES.PS4, Constants.DEVICES.CHROME_BOOK, Constants.DEVICES.UNKNOWN];\n    if (this.device === Constants.DEVICES.UNKNOWN) {\n      if (this.isMobile(userAgent) || this.isTablet(userAgent)) {\n        return false;\n      }\n    }\n    return desktopDevices.indexOf(this.device) > -1;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/KeysPipe.html":{"url":"pipes/KeysPipe.html","title":"pipe - KeysPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  KeysPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/demo/src/app/pipes/keys.pipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keys\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value, props: string[])\n                \n            \n\n\n            \n                \n                    Defined in projects/demo/src/app/pipes/keys.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    props\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        []\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value, props: string[] = []): any {\n    const keys = [];\n    const noFilter = props.length === 0;\n    for (const key in value) {\n      if (noFilter) {\n        if (value.hasOwnProperty(key)) {\n          keys.push({ key, value: value[key] });\n        }\n      } else {\n        if (props.indexOf(key) !== -1) {\n          keys.push({ key, value: value[key] });\n        }\n      }\n    }\n    return keys;\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReTree.html":{"url":"classes/ReTree.html","title":"class - ReTree","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReTree\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-device-detector/src/lib/retree.ts\n        \n\n            \n                Description\n            \n            \n                Created by ahsanayaz on 08/11/2016.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exec\n                            \n                            \n                                    Public\n                                test\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-device-detector/src/lib/retree.ts:5\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            exec\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    exec(str: string, regex: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/retree.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    regex\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            test\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    test(str: string, regex: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-device-detector/src/lib/retree.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    regex\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class ReTree {\n  constructor() {}\n\n  public test(str: string, regex: any): any {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    if (regex instanceof RegExp) {\n      return regex.test(str);\n    } else if (regex && Array.isArray(regex.and)) {\n      return regex.and.every((item: any) => {\n        return this.test(str, item);\n      });\n    } else if (regex && Array.isArray(regex.or)) {\n      return regex.or.some((item: any) => {\n        return this.test(str, item);\n      });\n    } else if (regex && regex.not) {\n      return !this.test(str, regex.not);\n    } else {\n      return false;\n    }\n  }\n\n  public exec(str: string, regex: any): any {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    if (regex instanceof RegExp) {\n      return regex.exec(str);\n    } else if (regex && Array.isArray(regex)) {\n      return regex.reduce((res: any, item: any) => {\n        return !!res ? res : this.exec(str, item);\n      }, null);\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UniversalDeviceDetectorService.html":{"url":"injectables/UniversalDeviceDetectorService.html","title":"injectable - UniversalDeviceDetectorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UniversalDeviceDetectorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/demo/src/app/server.ts\n        \n\n\n            \n                Extends\n            \n            \n                        DeviceDetectorService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browser\n                            \n                            \n                                browser_version\n                            \n                            \n                                device\n                            \n                            \n                                deviceType\n                            \n                            \n                                orientation\n                            \n                            \n                                os\n                            \n                            \n                                os_version\n                            \n                            \n                                reTree\n                            \n                            \n                                ua\n                            \n                            \n                                userAgent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDeviceInfo\n                            \n                            \n                                    Public\n                                isDesktop\n                            \n                            \n                                    Public\n                                isMobile\n                            \n                            \n                                    Public\n                                isTablet\n                            \n                            \n                                setDeviceInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platformId: any, request: Request)\n                    \n                \n                        \n                            \n                                Defined in projects/demo/src/app/server.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeviceInfo()\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:135\n\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         DeviceInfo\n\n                    \n                    \n                        the device information object.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDesktop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDesktop(userAgent)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:191\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a desktop device\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isMobile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMobile(userAgent)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:155\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a mobile\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isTablet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTablet(userAgent)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:171\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    userAgent\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        whether the current device is a tablet\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDeviceInfo\n                        \n                        \n                    \n                \n            \n            \n                \nsetDeviceInfo(ua)\n                \n            \n\n\n            \n                \n                    Inherited from         DeviceDetectorService\n\n                \n            \n            \n                \n                        Defined in         DeviceDetectorService:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    ua\n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.userAgent\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            browser_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:43\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            device\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deviceType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:45\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            orientation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:46\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:39\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            os_version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:42\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reTree\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReTree()\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:44\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ua\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userAgent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                            \n                                \n                                    Inherited from         DeviceDetectorService\n\n                                \n                            \n                        \n                            \n                                    Defined in         DeviceDetectorService:38\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)){\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}\n\n@NgModule({\n  imports: [AppModule, ServerModule],\n  bootstrap: [AppComponent],\n  providers: [{\n    provide: DeviceDetectorService,\n    useClass: UniversalDeviceDetectorService\n  },]\n})\nexport class AppServerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nHow to Contribute\nThere are many ways you can Contribute to this project!\n\nCreate issues or help close them\nFork, Enhance, Fix Bugs, and send in Pull Requests\nHelp write Tests or improve Examples / Documentation\nShare repo with others.\n\nIssues\nFound a bug, have some feedback or really want some feature? Lock in an Issue. Here are some tips:\n\nMake sure the bug you're reporting really is a bug and you have read the docs/readme.\nProvide as many details as you can about the bug. How can it be reproduced? What have you tried so far?\nFor feature requests, really explain why your feature is important and how it improves the library and helps the developers using it.\nGo through existing issues. Make sure that it hasn't already been opened.\nIf planning on helping close an issue, don't be shy. Ask questions and get more information before sending your PR.Pull Requests\n\n\nWant to fix a bug, implement a feature or help with the tests / docs? Please read this first:\n\nMake sure there's an open issue for what you're sending in your Pull Request. If not, open it.\nSend in your PRs agains the master branch.\nWrite unit tests / docs for any new feature you implement.\nMake sure your PRs pass all tests and CI.\nBe active in your relevant issue and PR threads.\nMake sure no one else is assigned or working on the issue. It's a good idea to leave a comment stating that you're going to implement it before sending in your PR. \nThis way no two devs are working on the same thing.\nIf required, update the CHANGELOG.md file with a small summary of your changes in the latest version (add a new section if needed)\n\nFinally, Thank you!\nIt means a lot that you took time out to improve this package and contribute back to the community. &#x1F389;\nRelevant Links\nProject Page\nAuthor\nNPM Package\nLicense\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/demo/e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            variable\n            __non_webpack_require__\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            variable\n            mainModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/server.ts\n            \n            variable\n            moduleFilename\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/demo/src/app/pipes/keys.pipe.ts\n            \n            pipe\n            KeysPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/app/server.ts\n            \n            injectable\n            UniversalDeviceDetectorService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/demo/src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/demo/src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSER_VERSIONS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSER_VERSIONS_RE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            BROWSERS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DEVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            DEVICES_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            GENERAL\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            MOBILES_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            OS_VERSIONS_RE_MAP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.constants.ts\n            \n            variable\n            TABLETS_RE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            injectable\n            DeviceDetectorService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            interface\n            DeviceInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/device-detector.service.ts\n            \n            variable\n            iPad\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-device-detector/src/lib/retree.ts\n            \n            class\n            ReTree\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.0.2\n        \n            @angular/common : ~11.0.2\n        \n            @angular/compiler : ~11.0.2\n        \n            @angular/core : ~11.0.2\n        \n            @angular/forms : ~11.0.2\n        \n            @angular/platform-browser : ~11.0.2\n        \n            @angular/platform-browser-dynamic : ~11.0.2\n        \n            @angular/platform-server : ~11.0.2\n        \n            @angular/router : ~11.0.2\n        \n            @nguniversal/express-engine : ^10.0.2\n        \n            classlist.js : ^1.1.20150312\n        \n            conventional-changelog-cli : ^2.1.1\n        \n            express : ^4.15.2\n        \n            ngx-device-detector : ^2.0.5\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.0.0\n        \n            web-animations-js : ^2.3.2\n        \n            zone.js : ~0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeviceType   (projects/.../device-detector.service.ts)\n                        \n                        \n                            OrientationType   (projects/.../device-detector.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-device-detector/src/lib/device-detector.service.ts\n    \n        \n            \n                \n                    \n                        \n                        DeviceType\n                    \n                \n                        \n                            \n                                 Mobile\n                            \n                        \n                        \n                            \n                                Value : mobile\n                            \n                        \n                        \n                            \n                                 Tablet\n                            \n                        \n                        \n                            \n                                Value : tablet\n                            \n                        \n                        \n                            \n                                 Desktop\n                            \n                        \n                        \n                            \n                                Value : desktop\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                Value : unknown\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        OrientationType\n                    \n                \n                        \n                            \n                                 Portrait\n                            \n                        \n                        \n                            \n                                Value : portrait\n                            \n                        \n                        \n                            \n                                 Landscape\n                            \n                        \n                        \n                            \n                                Value : landscape\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (projects/.../server.ts)\n                        \n                        \n                            run   (projects/.../server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/demo/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            app\n                        \n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     express.Express\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            run\n                        \n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  ngx-device-detector\n\n\n\nAn Angular 6+ powered AOT compatible device detector that helps to identify browser, os and other useful information regarding the device using the app. The processing is based on user-agent.\n\n\n\n\n\n\n\n\n\n  Deprecated package :\n  \n  \n\n\n  New package :\n  \n  \nIf you use Angular 5, you must use v1.5.2 or earlier\n\n\nDOCS\nNgx Device Detector DOCS\nLive DEMO\nDemo\nSSR Demo\nInstallation\nTo install this library, run:\n$ npm install ngx-device-detector --saveIn your component where you want to use the Device Service\n  import { Component } from '@angular/core';\n  ...\n  import { DeviceDetectorService } from 'ngx-device-detector';\n  ...\n  @Component({\n    selector: 'home',  // \n    styleUrls: [ './home.component.scss' ],\n    templateUrl: './home.component.html',\n    ...\n  })\n\n  export class HomeComponent {\n    deviceInfo = null;\n    ...\n    constructor(..., private http: Http, private deviceService: DeviceDetectorService) {\n      this.epicFunction();\n    }\n    ...\n    epicFunction() {\n      console.log('hello `Home` component');\n      this.deviceInfo = this.deviceService.getDeviceInfo();\n      const isMobile = this.deviceService.isMobile();\n      const isTablet = this.deviceService.isTablet();\n      const isDesktopDevice = this.deviceService.isDesktop();\n      console.log(this.deviceInfo);\n      console.log(isMobile);  // returns if the device is a mobile device (android / iPhone / windows-phone etc)\n      console.log(isTablet);  // returns if the device us a tablet (iPad etc)\n      console.log(isDesktopDevice); // returns if the app is running on a Desktop browser.\n    }\n    ...\n  }\nTo ensure Universal has the correct User Agent for device detection, you'll need to provide it manually. If using ExpressJS for example:\nuniversal-device-detector.service.ts:\nimport { Inject, Injectable, Optional, PLATFORM_ID } from '@angular/core';\nimport { REQUEST } from '@nguniversal/express-engine/tokens';\nimport { Request } from 'express';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { isPlatformServer } from '@angular/common';\n\n@Injectable()\nexport class UniversalDeviceDetectorService extends DeviceDetectorService {\n  constructor(@Inject(PLATFORM_ID) platformId: any, @Optional() @Inject(REQUEST) request: Request) {\n    super(platformId);\n    if (isPlatformServer(platformId)) {\n      super.setDeviceInfo((request.headers['user-agent'] as string) || '');\n    }\n  }\n}app.server.module.ts:\n{\n  provide: DeviceDetectorService,\n  useClass: UniversalDeviceDetectorService\n},Device service\nHolds the following properties\n\nbrowser\nos\ndevice\nuserAgent\nos_version\n\nHelper Methods\n\nisMobile() : returns if the device is a mobile device (android / iPhone/ windows-phone etc)\nisTablet() : returns if the device us a tablet (iPad etc)\nisDesktop() : returns if the app is running on a Desktop browser.\n\nDevelopment\nTo generate all *.js, *.js.map and *.d.ts files:\n  $ npm run tscTo lint all *.ts files:\n  $ npm run lintTo run unit tests\n  $ npm run testTo build the library\n  $ npm run buildRun the DEMO\nMake sure you have @angular/cli installed\n  $ npm install -g @angular/cli  $ cd demo\n  $ npm install\n  $ ng servethe demo will be up at localhost:4200\nChange Log\nPlease see CHANGE_LOG.MD for the updates.\nIE10, IE11 Compatibility\nIf you're consuming the library for IE10 & IE11, please refer to the polyfills.ts file in your project.\nFor example, for an Angular 9.x+ project, you can refer to the changes done in this PR for our demo project that works on IE11\nCredits\nThe library is inspired by and based on the work from ng-device-detector . Also used a typescript wrapper of the amazing work in ReTree for regex based needs and an Angular2 Library Creator boilerplate to get the work started fast. I.e. Generator Angular2 library.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Muhammad Ahsan Ayaz\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppServerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppServerModule\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nKeysPipe\n\nKeysPipe\n\nAppModule -->\n\nKeysPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppServerModule\n\nAppServerModule\n\nAppServerModule -->\n\nAppModule->AppServerModule\n\n\n\nAppComponent  -->\n\nAppServerModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
